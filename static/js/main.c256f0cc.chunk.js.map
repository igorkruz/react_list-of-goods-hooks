{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","isAlphabetSort","ALPHABET","isLengthSort","LENGTH","isResetButtonActive","products","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getGoodsFromServer","className","type","classNames","onClick","current","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IAqBaE,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAiBF,IAAaP,EAASU,SACvCC,EAAeJ,IAAaP,EAASY,OACrCC,EAAsBN,IAAaP,EAASM,MAAQF,EAEpDU,EA7BmB,SACzBC,EADyB,GAGrB,IADFR,EACC,EADDA,SAAUH,EACT,EADSA,WAENY,EAAY,YAAOD,GAczB,OAZIR,IAAaP,EAASU,UACxBM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CZ,IAAaP,EAASY,QACxBI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvCjB,GACFY,EAAaM,UAGRN,EAWUO,CACftB,EACA,CAAEM,WAAUH,eAoBd,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,2BAA4BjB,IAE9BkB,QAzBe,WACrBnB,EAAYR,EAASU,WAmBjB,iCAUA,wBACEe,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,8BAA+Bf,IAEjCgB,QA/Ba,WACnBnB,EAAYR,EAASY,SAyBjB,4BAUA,wBACEa,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,8BAA+BtB,IAEjCuB,QArCQ,WACdtB,GAAY,SAAAuB,GAAO,OAAKA,MA+BpB,qBAUCf,GAEC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA3CI,WACZtB,GAAY,GACZG,EAAYR,EAASM,OAsCf,sBAUJ,6BACE,6BACGQ,EAASe,KAAI,SAAAC,GAAO,OACnB,oBAAI,UAAQ,OAAZ,SAAkCA,GAAVA,cC7HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c256f0cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getGoodsFromServer = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const isAlphabetSort = sortType === SortType.ALPHABET;\n  const isLengthSort = sortType === SortType.LENGTH;\n  const isResetButtonActive = sortType !== SortType.NONE || isReversed;\n\n  const products = getGoodsFromServer(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReversed(current => !current);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'button is-info is-light': !isAlphabetSort,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'button is-success is-light': !isLengthSort,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'button is-warning is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonActive\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {products.map(product => (\n            <li data-cy=\"Good\" key={product}>{product}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}